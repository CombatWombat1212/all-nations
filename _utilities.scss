


$weights: (100, 200, 300, 400, 500, 600, 700, 800, 900);

@each $weight in $weights {
  .font-weight-#{$weight} {
    font-weight: $weight !important;
  }
}



.skinny h5 {
  font-weight: 300 !important;
}

.mt-0 {
  margin-top: 0 !important;
}

.mt-1 {
  margin-top: 0.5rem !important;
}

.mt-2 {
  margin-top: 1rem !important;
}

.mt-3 {
  margin-top: 1.5rem !important;
}

.mt-4 {
  margin-top: 2rem !important;
}

.mt-5 {
  margin-top: 4rem !important;
}

.mt-6 {
  margin-top: 6rem !important;
}

.mt-auto {
  margin-top: auto !important;
}

.mb-0 {
  margin-bottom: 0 !important;
}

.mb-1 {
  margin-bottom: 0.5rem !important;
}

.mb-2 {
  margin-bottom: 1rem !important;
}

.mb-3 {
  margin-bottom: 1.5rem !important;
}

.mb-4 {
  margin-bottom: 2rem !important;
}

.mb-5 {
  margin-bottom: 4rem !important;
}

.mb-6 {
  margin-bottom: 6rem !important;
}

.mb-auto {
  margin-bottom: auto !important;
}

$colors: (
  "white": #fff,
  "light": #c5d9e1,
  "dark": #080909,
  "accent": #920d1a,
);

@each $name, $color in $colors {
  .col-#{$name} {
    &,
    & * {
      color: var(--col-#{$name}) !important;
    }
  }
}

:root {
  @each $name, $color in $colors {
    --col-#{$name}: #{$color};
  }
}



span[nobr]{
  white-space: nowrap;
}









@mixin generate-media-breakpoint-up($breakpoint, $breakpoints: $grid-breakpoints) {
  $min: map-get($breakpoints, $breakpoint);
  @if $min {
    @media (min-width: $min) {
      @content;
    }
  } @else {
    @content;
  }
}



@mixin generate-display-classes($display-type) {
  @each $breakpoint, $value in $grid-breakpoints {
    .d-#{$display-type}-#{$breakpoint} {
      @include generate-media-breakpoint-up($breakpoint) {
        display: $display-type;
      }
    }
  }
}

@include generate-display-classes(none);
@include generate-display-classes(block);
@include generate-display-classes(flex);
